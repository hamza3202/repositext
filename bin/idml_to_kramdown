# Convert IDML files to AT files
#
# Imports all IDML files that match the given Dir.glob pattern and
# writes the corresponding .at kramdown files in the same directory as the IDML
# source files, each with unchanged base name and extension changed to '.at'.
#
# Use like so:
#     bundle exec idml_to_kramdown '../idml_docs/*'
#
# NOTE: Make sure to wrap the file pattern in single quotes!
require 'repositext-kramdown'

file_pattern = ARGV.shift
STDERR.puts "Batch importing all IDML files at #{ file_pattern }."
STDERR.puts '-' * 80
start_time = Time.now
total_count = 0
success_count = 0
errors_count = 0

Dir.glob(file_pattern).find_all { |e| e =~ /\.idml$/}.each do |idml_file_name|
  STDERR.puts " - importing #{ idml_file_name }"
  begin
    at_file_name = idml_file_name.gsub(/\.idml$/, '.at')
    doc = Kramdown::Parser::Idml.new(idml_file_name).parse
    File.write(at_file_name, doc.to_kramdown)
    success_count += 1
  rescue Kramdown::Parser::IdmlStory::InvalidElementException => e
    STDERR.puts "   Error: #{ e.class.name } - #{ e.message }"
    errors_count += 1
  end
  total_count += 1
end

STDERR.puts '-' * 80
STDERR.puts "Finished importing #{ success_count } of #{ total_count } IDML files in #{ Time.now - start_time } seconds. There were #{ errors_count } errors."
