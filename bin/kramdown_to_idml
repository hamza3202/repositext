#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-

# This script converts all kramdown files that match the given Dir.glob pattern and
# writes the corresponding IDML files in the same directory as the kramdown
# source files, each with unchanged base name and extension changed to '.idml'.
#
# Use like so:
#     bundle exec kramdown_to_idml '../kramdown_docs/*.at'
#
#
require 'repositext-kramdown'

file_pattern = ARGV.shift
STDERR.puts "Batch importing all kramdown files at #{ file_pattern }."
STDERR.puts '-' * 80
start_time = Time.now
total_count = 0
success_count = 0
errors_count = 0

Dir.glob(file_pattern).each do |kramdown_file_name|
  STDERR.puts " - importing #{ kramdown_file_name }"
  begin
    idml_file_name = kramdown_file_name.gsub(/\.[^\.]+$/, '.idml')
    Kramdown::Document.new(
      kramdown_file_name,
      {
        :input => :repositext,
        :idml_output_file_name => idml_file_name
      }
    ).to_idml
    success_count += 1
  rescue Exception => e
    STDERR.puts "   Error: #{ e.class.name } - #{ e.message }"
    errors_count += 1
  end
  total_count += 1
end

STDERR.puts '-' * 80
STDERR.puts "Finished importing #{ success_count } of #{ total_count } kramdown files in #{ Time.now - start_time } seconds. There were #{ errors_count } errors."
